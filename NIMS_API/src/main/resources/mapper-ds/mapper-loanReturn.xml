<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 대출반납기 연계 데이터 CRUD -->
<mapper namespace="loanReturn">
	<resultMap id="map" type="java.util.HashMap" />
	
	<cache />
	<!-- [조회] loanReturn.getLoanReturnBookRankListCnt -->
	<select id="getLoanReturnBookRankListCnt" parameterType="map" resultType="int">
		SELECT
			COUNT(*) AS count
		FROM
			tbl_api_loanReturn_use_log
		<where>
			log_date between TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD') + INTERVAL '1 day' - INTERVAL '1 second'
			<if test='library_key != "" and library_key != null'>
				AND library_key = #{library_key}
			</if>
		</where>
			
	</select>
	
	<!-- [조회] loanReturn.getLoanReturnBookRankList -->
	<select id="getLoanReturnBookRankList" parameterType="map" resultType="java.util.LinkedHashMap">
		SELECT
			ROW_NUMBER() OVER(ORDER BY count(*) desc) AS rowunm,
			fn_library_nm(library_key) as library_nm,
			book_no,
			book_title,
			book_author,
			count(*) AS cnt
		FROM
			tbl_api_loanReturn_use_log
		<where>
			log_date between TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD') + INTERVAL '1 day' - INTERVAL '1 second'
			<if test='library_key != "" and library_key != null'>
				AND library_key = #{library_key}
			</if>
		</where>
		GROUP BY library_key, book_no, book_title, book_author
		ORDER BY cnt DESC
		<if test='limit != "" and limit != null'>
			LIMIT #{limit}
		</if>
	</select>
	
	<!-- [조회] loanReturn.getLoanReturnUserRnakListCnt -->
	<select id="getLoanReturnUserRankListCnt" parameterType="map" resultType="int">
		SELECT
			COUNT(*) AS count
		FROM (
			SELECT
				fn_library_nm(t1.library_key) as library_nm,
				t1.user_id,
				t1.user_name,
				t2.recent_loan_date,
				count(*) AS cnt
			FROM
				tbl_api_loanReturn_use_log t1
				LEFT OUTER JOIN( 
					SELECT library_key, user_id, max(loan_date) as recent_loan_date 
					FROM tbl_api_loanReturn_use_log
					GROUP BY library_key, user_id
				) t2 ON t1.user_id = t2.user_id AND t1.library_key = t2.library_key
			<where>
				t1.loan_date IS NOT null 
				AND TO_DATE(t1.loan_date, 'YYYY-MM-DD') BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD') + INTERVAL '1 day' - INTERVAL '1 second'
				<if test='library_key != "" and library_key != null'>
					AND t1.library_key = #{library_key}
				</if>
			</where>
			GROUP BY
				t1.library_key, t1.user_id, t1.user_name, t2.recent_loan_date
			ORDER BY cnt DESC
		) A
	</select>
	
	<!-- [조회] loanReturn.getLoanReturnUserRankList -->
	<select id="getLoanReturnUserRankList" parameterType="map" resultType="java.util.LinkedHashMap">
		SELECT
			fn_library_nm(t1.library_key) as library_nm,
			t1.user_id,
			t1.user_name,
			t2.recent_loan_date,
			count(*) AS cnt
		FROM
			tbl_api_loanReturn_use_log t1
			LEFT OUTER JOIN( 
				SELECT library_key, user_id, max(loan_date) as recent_loan_date 
				FROM tbl_api_loanReturn_use_log
				GROUP BY library_key, user_id
			) t2 ON t1.user_id = t2.user_id AND t1.library_key = t2.library_key
		<where>
			t1.loan_date IS NOT null 
			AND TO_DATE(t1.loan_date, 'YYYY-MM-DD') BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD') + INTERVAL '1 day' - INTERVAL '1 second'
			<if test='library_key != "" and library_key != null'>
				AND t1.library_key = #{library_key}
			</if>
		</where>
		GROUP BY
			t1.library_key, t1.user_id, t1.user_name, t2.recent_loan_date
		ORDER BY cnt DESC
		<if test='limit != "" and limit != null'>
			LIMIT #{limit}
		</if>
	</select>
	
	<!-- [조회] loanReturn.getLoanReturnLocationRankListCnt -->
	<select id="getLoanReturnLocationRankListCnt" parameterType="map" resultType="int">
		SELECT
			COUNT(*) AS count
		FROM
		(
			SELECT
				fn_library_nm(t1.library_key) as library_nm,
				t2.device_location,
				t1.user_id,
				t1.user_name,
				COUNT(loan_date) AS loan_cnt,
				COUNT(return_date) AS return_cnt,
				COUNT(*) AS cnt
			FROM
				tbl_api_loanReturn_use_log t1 LEFT OUTER JOIN
				tbl_device t2 ON t1.device_key = t2.rec_key
			<where>
				t1.loan_date IS NOT null 
				AND TO_DATE(t1.loan_date, 'YYYY-MM-DD') BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD') + INTERVAL '1 day' - INTERVAL '1 second'
				<if test='library_key != "" and library_key != null'>
					AND t1.library_key = #{library_key}
				</if>
				<if test='device_key != "" and device_key != null'>
					AND t1.device_key = #{device_key}
				</if>
			</where>
			GROUP BY
				t1.library_key, t2.device_location, t1.user_id, t1.user_name
		) A
	</select>
	
	<!-- [조회] loanReturn.getLoanReturnLocationRankList -->
	<select id="getLoanReturnLocationRankList" parameterType="map" resultType="java.util.LinkedHashMap">
		SELECT
			fn_library_nm(t1.library_key) as library_nm,
			t2.device_location,
			t1.user_id,
			t1.user_name,
			COUNT(loan_date) AS loan_cnt,
			COUNT(return_date) AS return_cnt,
			COUNT(*) AS cnt
		FROM
			tbl_api_loanReturn_use_log t1 LEFT OUTER JOIN
			tbl_device t2 ON t1.device_key = t2.rec_key
		<where>
			t1.loan_date IS NOT null 
			AND TO_DATE(t1.loan_date, 'YYYY-MM-DD') BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD') + INTERVAL '1 day' - INTERVAL '1 second'
			<if test='library_key != "" and library_key != null'>
				AND t1.library_key = #{library_key}
			</if>
			<if test='device_key != "" and device_key != null'>
				AND t1.device_key = #{device_key}
			</if>
		</where>
		GROUP BY
			t1.library_key, t2.device_location, t1.user_id, t1.user_name
		ORDER BY cnt DESC, t2.device_location
		<if test='limit != "" and limit != null'>
			LIMIT #{limit}
		</if>
	</select>
</mapper>